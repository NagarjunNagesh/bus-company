// Code generated by go-swagger; DO NOT EDIT.

package trip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetAllTripsHandlerFunc turns a function with the right signature into a get all trips handler
type GetAllTripsHandlerFunc func(GetAllTripsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAllTripsHandlerFunc) Handle(params GetAllTripsParams) middleware.Responder {
	return fn(params)
}

// GetAllTripsHandler interface for that can handle valid get all trips params
type GetAllTripsHandler interface {
	Handle(GetAllTripsParams) middleware.Responder
}

// NewGetAllTrips creates a new http.Handler for the get all trips operation
func NewGetAllTrips(ctx *middleware.Context, handler GetAllTripsHandler) *GetAllTrips {
	return &GetAllTrips{Context: ctx, Handler: handler}
}

/* GetAllTrips swagger:route GET /trip trip getAllTrips

Get all trips from PackAndGo

Returns all the trips from PackAndGo

*/
type GetAllTrips struct {
	Context *middleware.Context
	Handler GetAllTripsHandler
}

func (o *GetAllTrips) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetAllTripsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
